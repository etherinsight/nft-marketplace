service: serverless-rest-api-with-dynamodb

frameworkVersion: '2'
provider:
  name: aws
  runtime: nodejs14.x
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      #todo: tighten later
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

functions:
  create:
    handler: nft-options/create.create
    events:
      - http:
          path: nft-options
          method: post
          cors: true

  list:
    handler: nft-options/list.list
    events:
      - http:
          path: nft-options
          method: get
          cors: true

  get:
    handler: nft-options/get.get
    events:
      - http:
          path: nft-options/{id}
          method: get
          cors: true

  update:
    handler: nft-options/update.update
    events:
      - http:
          path: nft-options/{id}
          method: put
          cors: true

  delete:
    handler: nft-options/delete.delete
    events:
      - http:
          path: nft-options/{id}
          method: delete
          cors: true


